#  _____    _
# |__  /___| |__  _ __ ___
#   / // __| '_ \| '__/ __|
#  / /_\__ \ | | | | | (__
# /____|___/_| |_|_|  \___|


[[ $TERM == "dumb" ]] && unsetopt zle && PS1='$ ' && return

# export PATH="/usr/local/sbin:/usr/local/bin:${PATH}"
# export PATH="/usr/local/lib/ruby/gems/bin:/usr/local/lib/ruby/gems/2.6.0/bin:/Library/TeX/texbin:/opt/X11/bin:${PATH}"


{{ if eq .chezmoi.os "darwin" }}

export PATH=/opt/homebrew/bin:$PATH

export PATH="${PATH}:${HOME}/.cargo/bin"
export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"

{{ else if eq .chezmoi.os "linux" }}

export PATH="/usr/local/sbin:/usr/local/bin:${PATH}"

{{ if eq .chezmoi.osRelease.id "raspbian" }}

export PATH="${PATH}:~/.local/bin"

{{ end }}


{{ else  }}


{{ end }}

#export PATH=/usr/local/share/python:$PATH
source ~/.config/zsh/prompt.zsh


ZSH_DISABLE_COMPFIX='true'


#Uncomment the following line to use case-sensitive completion.
CASE_SENSITIVE="false"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
DISABLE_AUTO_UPDATE="false"


# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=10000
SAVEHIST=10000

setopt appendhistory autocd extendedglob
unsetopt notify

DISABLE_UNTRACKED_FILES_DIRTY="true"

TERM=xterm-24bits


###### EMACS

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
    export EDITOR='emacs'
else
    export EDITOR='emacs'
fi



#
# ME
#

# Compilation flags
#export ARCHFLAGS="-arch x86_64"

# VENV PYTHPN
export WORKON_HOME=~/.environs
{{ if eq .chezmoi.os "darwin" }}
export VIRTUALENVWRAPPER_PYTHON=/opt/homebrew/bin/python3
export VIRTUALENVWRAPPER_VIRTUALENV=/opt/homebrew/bin/virtualenv
source /opt/homebrew/bin/virtualenvwrapper.sh
#export PATH=$PATH:/Users/jburgess/Library/Python/3.10/bin

{{ else if eq .chezmoi.os "linux" }}


{{ if ne .chezmoi.osRelease.id "raspbian" }}
export PATH=${PATH}:/home/jburgess/.local/bin
VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
export WORKON_HOME=~/.environs
source ~/.local/bin/virtualenvwrapper.sh

{{ end  }}

{{ else }}

{{ end }}

# local
export ATOMDB=~/.threeml/atomdb
export OMP_NUM_THREADS=1
export MKL_NUM_THREADS=1
export NUMEXPR_NUM_THREADS=1
#export MPLBACKEND='Agg'

{{ if eq .chezmoi.os "darwin" }}
export CMDSTAN=/Users/jburgess/.cmdstanpy/cmdstan
{{ else if eq .chezmoi.os "linux" }}
export CMDSTAN=/home/jburgess/.cmdstan/cmdstan
{{ else }}
{{ end }}

bindkey -e

test -e "${HOME}/.config/zsh/.iterm2_shell_integration.zsh" && source "${HOME}/.config/zsh/.iterm2_shell_integration.zsh"

{{ if eq .chezmoi.os "darwin" }}

export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:~/sw/lib

# End of lines configured by zsh-newuser-install

{{ end }}
# HDF5 Sucks....
export HDF5_DISABLE_VERSION_CHECK=1



export ITERM_ENABLE_SHELL_INTEGRATION_WITH_TMUX=YES 


#export HDF5_DIR="$(brew --prefix hdf5)"

{{ if eq .chezmoi.os "darwin" }}
# export HDF5_DIR="$(brew --prefix hdf5-mpi)"
export HDF5_DIR="$(brew --prefix hdf5)"
{{ end }}


source ~/.config/zsh/plugins.zsh

source ~/.config/zsh/emacs.zsh

source ~/.config/zsh/alias.zsh

source ~/.config/zsh/wandb.zsh

export LS_COLORS="*.rsp=32:*.rsp2=32:*.h5=34:*.pha=33:*.fits=33;01:*.py=32;01:*.ipynb=36"

# # Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
# export PATH="$PATH:$HOME/.rvm/bin"

{{ if eq .chezmoi.os "linux" }}

export FZF_DEFAULT_COMMAND='fdfind -HI -L --exclude .git --color=always'


{{ else }}

export FZF_DEFAULT_COMMAND='fd -HI -L --exclude .git --color=always'

{{ end }}



export FZF_DEFAULT_OPTS="
  --ansi
  --height 80%
  --reverse
  --multi
  --color fg:#19C78B,bg:#37004F,hl:#FF2387,fg+:#CDCDCD,bg+:#37004F,hl+:#1FF98C
"

export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_CTRL_T_OPTS="--preview '(bat --theme ansi-dark --color always {} 2> /dev/null || exa --tree --color=always {}) 2> /dev/null | head -200'"
export FZF_CTRL_R_OPTS="--preview 'echo {}' --preview-window down:3:hidden:wrap --bind '?:toggle-preview'"
export FZF_ALT_C_OPTS="--preview 'exa --tree --color=always {} | head -200'"




export FZ_HISTORY_CD_CMD=zshz

export ZSHZ_CASE=smart



{{ if eq .chezmoi.os "darwin" }}



FPATH=$(brew --prefix)/share/zsh/site-functions:~/sw/mac-zsh-completions:$FPATH


zstyle ':completion:*:git-checkout:*' sort true
# set descriptions format to enable group support
zstyle ':completion:*:descriptions' format '[%d]'
# set list-colors to enable filename colorizing
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
# preview directory's content with exa when completing cd
zstyle ':fzf-tab:complete:cd:*' fzf-preview "exa -1 --color=always $realpath"
#switch group using `,` and `.`
#zstyle ':fzf-tab:*' switch-group ',' '.'
zstyle ':completion:*' menu select

{{ else}}


source ~/sw/fzf-tab-completion/zsh/fzf-zsh-completion.sh
bindkey '^I' fzf_completion

zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
# only for git
zstyle ':completion:*:*:git:*' fzf-search-display true
# or for everything
zstyle ':completion:*' fzf-search-display true
zstyle ':completion:*' menu select


{{ end }}


autoload -Uz compinit promptinit
promptinit
compinit

zinit cdreplay -q   # -q is for quiet; actually run all the `compdef's saved before
                    #`compinit` call (`compinit' declares the `compdef' function, so
                    # it cannot be used until `compinit' is ran; Zinit solves this
                    # via intercepting the `compdef'-calls and storing them for later
                    # use with `zinit cdreplay')


export PURE_PROMPT_SYMBOL=âš¥

{{ if eq .chezmoi.os "darwin" }}
eval "$(direnv hook zsh)"

source $(brew --prefix)/opt/fzf/shell/key-bindings.zsh
source $(brew --prefix)/opt/fzf/shell/completion.zsh


# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/jburgess/sw/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/jburgess/sw/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/jburgess/sw/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/jburgess/sw/google-cloud-sdk/completion.zsh.inc'; fi


{{ end }}

